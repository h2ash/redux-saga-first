{"version":3,"sources":["Connected.jsx","actions/actions.js","reducers/reducers.js","sagas.js","store.js","App.js","index.js"],"names":["Connected","dispatch","useDispatch","onClick","type","initialState","data","workerLoadData","watchLoadData","fetchData","fetch","then","response","json","call","put","payload","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","state","action","composeWithDevTools","applyMiddleware","logger","run","App","ReactDOM","render","document","getElementById"],"mappings":"uOAaeA,G,MATG,WAChB,IAAMC,EAAWC,cAGjB,OAAO,6BACL,4BAAQC,QAHM,kBAAMF,ECKf,CACLG,KAXqB,gBDQrB,e,wCEPEC,EAAe,CACnBC,KAAM,I,2CCKEC,G,WAOOC,GAZjB,SAASC,IACP,OAAOC,MAAM,gDACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAG/B,SAAUN,IAAV,uEAEiB,OAFjB,SAEuBO,YAAKL,GAF5B,OAII,OAFMH,EAFV,gBAIUS,YFRD,CACLX,KALoB,WAMpBY,QEMkBV,IAJtB,uCAOO,SAAUE,IAAV,iEACL,OADK,SACCS,YFfiB,YEeIV,GADtB,uCCPP,IAAMW,EAAiBC,cACjBC,EAAQC,uBFHS,WAAmC,IAAlCC,EAAiC,uDAAzBjB,EAAckB,EAAW,uCACvD,MDPsB,aCOlBA,EAAOnB,KACF,eACFkB,EADL,CAEEhB,KAAMiB,EAAOP,UAIVM,IEL0BE,8BAAoBC,0BAAgBP,EAAgBQ,OACvFR,EAAeS,IAAInB,GAEJY,QCEAQ,MARf,WACE,OACE,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,EAAD,QCLNS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5af1030b.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loadData } from './actions/actions';\n\nconst Connected = () => {\n  const dispatch = useDispatch();\n  const onClick = () => dispatch(loadData());\n\n  return <div>\n    <button onClick={onClick}>Click me</button>\n  </div>\n}\n\nexport default Connected; ","export const PUT_DATA = 'PUT_DATA';\nexport const LOAD_DATA = \"LOAD_DATA\";\n\nexport const putData = dataFromServer => {\n  return {\n    type: PUT_DATA,\n    payload: dataFromServer\n  };\n};\n\nexport const loadData = () => {\n  return {\n    type: LOAD_DATA\n  }\n}\n","import { PUT_DATA } from '../actions/actions';\n\nconst initialState = {\n  data: {}\n};\n\nexport const reducer = (state = initialState, action) => {\n  if (action.type === PUT_DATA) {\n    return {\n      ...state,\n      data: action.payload\n    };\n  }\n\n  return state;\n};\n","import { takeEvery, put, call } from 'redux-saga/effects';\nimport { LOAD_DATA, putData } from './actions/actions';\n\nfunction fetchData() {\n  return fetch('https://jsonplaceholder.typicode.com/todos/1')\n    .then(response => response.json());\n}\n\nfunction* workerLoadData() {\n    // не вызываем функцию, а передаём объект функции, наружу же получаем значение\n    const data = yield call(fetchData)\n\n    yield put(putData(data))\n}\n\nexport function* watchLoadData() {\n  yield takeEvery(LOAD_DATA, workerLoadData);\n}\n","import { createStore, applyMiddleware } from 'redux';\n// import ReduxThunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer } from './reducers/reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchLoadData } from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware, logger)));\nsagaMiddleware.run(watchLoadData);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport Connected from './Connected';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Connected />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}